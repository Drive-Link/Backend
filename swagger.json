{
  "openapi": "3.0.0",
  "info": {
    "title": "Backend APIs for Drivelink",
    "version": "1.0.0",
    "consumes": [
      "application/json",
      "multipart/form-data"
    ],
    "description": "API documentation for Drivelink",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "Drivelink API Support",
      "url": "https://www.example.com/support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000",
      "description": "localhost"
    },
    {
      "url": "https://backend-ukbu.onrender.com/",
      "description": "online"
    }
  ],
  "paths": {
    "/api/v1/passenger/register/": {
      "post": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Some description...",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drivers"
                }
              }
            }
          },
          "400": {
            "description": "Some description...",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drivers"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "in": "body",
          "description": "Route for register",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/passengers"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/passengers"
              }
            }
          }
        }
      }
    },
    "/api/v1/{role}/upload": {
      "post": {
        "tags": [
          "passenger"
        ],
        "description": "For both passenger and driver file uploads.",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/passenger/login/": {
      "post": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "Some description...",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseLogin"
                }
              }
            }
          },
          "401": {
            "description": "Some description...",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/drivers"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "in": "body",
          "description": "Get passenger profile",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        }
      }
    },
    "/api/v1/driver/login/": {
      "post": {
        "tags": [
          "driver"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/passenger/reset_password/": {
      "post": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "in": "body",
          "description": "Create passenger profile",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/resetPasswordPayload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/resetPasswordPayload"
              }
            }
          }
        }
      },
      "put": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "requestBody": {
          "required": true,
          "in": "body",
          "description": "Update password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordPayload"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordPayload"
              }
            }
          }
        }
      }
    },
    "/api/v1/passengers/profile/": {
      "get": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "passengerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "in": "body",
          "description": "Create passenger profile",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/passengersProfile"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/passengersProfile"
              }
            }
          }
        }
      }
    },
    "/api/v1/driver/register/": {
      "post": {
        "tags": [
          "driver"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/passenger/{getDetails}": {
      "get": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "parameters": [
          {
            "name": "getDetails",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "passengerAuth": []
          }
        ]
      }
    },
    "/api/v1/passenger/{newDetails}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "newDetails",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/passenger/{deleteDetails}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "deleteDetails",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/passenger/{updateDetails}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "updateDetails",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/driver/profile/": {
      "post": {
        "tags": [
          "driver"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "driver"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/v1/passengers/home/": {
      "get": {
        "tags": [
          "passenger"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "passengerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "passengerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "driverAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "basicInfo": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Joe"
          },
          "password": {
            "type": "string",
            "example": "lol"
          },
          "phoneNumber": {
            "type": "string",
            "example": "2348159655468"
          },
          "email": {
            "type": "string",
            "example": "lild93078@gmail.com"
          },
          "country": {
            "type": "string",
            "example": "Nigeria"
          },
          "city": {
            "type": "string",
            "example": "lagos"
          },
          "state": {
            "type": "string",
            "example": "ikoyi"
          }
        },
        "required": [
          "password",
          "phoneNumber",
          "email"
        ],
        "xml": {
          "name": "basicInfo"
        }
      },
      "passengers": {
        "xml": {
          "name": "passengers"
        },
        "$ref": "#/components/schemas/basicInfo"
      },
      "drivers": {
        "xml": {
          "name": "drivers"
        },
        "$ref": "#/components/schemas/basicInfo"
      },
      "responseLogin": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Login Successful"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "number",
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "example": "any"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "any"
                  },
                  "role": {
                    "type": "string",
                    "example": "passenger"
                  },
                  "accessToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoicGFzc2VuZ2VyIiwiZW1haWwiOiJhbnkiLCJ1c2VySWQiOjEsInBob25lTnVtYmVyIjoiYW55IiwiY2l0eSI6ImFueSIsImlhdCI6MTcxOTkzNjg0MCwiZXhwIjoxNzI3NzEyODQwfQ.OW3g1xbjcqejhWtON_X0UoWjZC31wAABqGzNFhGGRTM"
                  }
                }
              }
            }
          },
          "status": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "responseLogin"
        }
      },
      "responseRegister": {
        "type": "object",
        "properties": {},
        "xml": {
          "name": "responseRegister"
        }
      },
      "UpdatePasswordPayload": {
        "type": "object",
        "properties": {
          "token": {
            "type": "number",
            "example": 250700
          },
          "password": {
            "type": "string",
            "example": "lolz"
          },
          "confirmPassword": {
            "type": "string",
            "example": "lolz"
          }
        },
        "required": [
          "token",
          "password",
          "confirmPassword"
        ],
        "xml": {
          "name": "UpdatePasswordPayload"
        }
      },
      "passengersProfile": {
        "type": "object",
        "properties": {
          "Cars": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "carName": {
                  "type": "string",
                  "example": "Hunda"
                },
                "carBrand": {
                  "type": "string",
                  "example": "Toyota"
                },
                "type": {
                  "type": "string",
                  "example": "SUV"
                },
                "plateNumber": {
                  "type": "string",
                  "example": "ABC123"
                }
              }
            }
          },
          "Card": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "cardNumber": {
                  "type": "string",
                  "example": "1234567890123456"
                },
                "cvv": {
                  "type": "number",
                  "example": 123
                },
                "expiryDate": {
                  "type": "string",
                  "example": "2022-12-31"
                }
              }
            }
          },
          "TrustedBuddies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Isaac"
                },
                "email": {
                  "type": "string",
                  "example": "isaac@gmail.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "08123456789"
                }
              }
            }
          }
        },
        "xml": {
          "name": "passengersProfile"
        }
      },
      "passengersNewDetails": {
        "type": "object",
        "properties": {
          "Cars": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "carName": {
                  "type": "string",
                  "example": "Hunda"
                },
                "carBrand": {
                  "type": "string",
                  "example": "Toyota"
                },
                "type": {
                  "type": "string",
                  "example": "SUV"
                },
                "plateNumber": {
                  "type": "string",
                  "example": "ABC123"
                }
              }
            }
          }
        },
        "xml": {
          "name": "passengersNewDetails"
        }
      },
      "login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "lild93078@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "lol"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "xml": {
          "name": "login"
        }
      },
      "resetPasswordPayload": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "lild93078@gmail.com"
          }
        },
        "required": [
          "email"
        ],
        "xml": {
          "name": "resetPasswordPayload"
        }
      }
    }
  },
  "autoBody": "false",
  "baseUrl": "http://localhost",
  "security": [
    {
      "BearerAuth": []
    }
  ]
}